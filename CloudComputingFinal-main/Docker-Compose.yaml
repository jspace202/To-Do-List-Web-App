version: "3.9"
services:
  backend:
    image: backendapi:latest
    build:
      context: ./Backend/CCFinal
      dockerfile: Dockerfile
    container_name: BackendAPI
    ports:
      - "5000:80"
    networks:
      - db
    depends_on:
      - dataBase
      - kafka
    links:
      - "dataBase:sqlserver"
  dataBase:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
    networks:
      - db

  canvasIntegration:
    image: canvasintegration:latest
    build:
      context: ./Backend/CCFinal.CanvasIntegration
      dockerfile: Dockerfile
    container_name: CanvasIntegration
    restart: unless-stopped
    networks:
      - db
    depends_on:
      - dataBase
      - kafka
    links:
      - "dataBase:sqlserver"

  zookeeper:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - db
  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    links:
      - zookeeper
    depends_on:
      - zookeeper
    networks:
      - db
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  frontend:
    image: frontendapi:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: FrontendAPI
    ports:
      - "81:80"
    networks:
      - db
    depends_on:
      - backend
    environment:
      - VITE_API_KEY=http://backendapi:80

networks:
  db:
    driver: bridge
